@Manual{CRAN:knitr,
  title =        {knitr: A General-Purpose Package for Dynamic Report
                  Generation in R},
  author =       {Yihui Xie},
  year =         {2017},
  note =         {R package version 1.17},
  url =          {https://yihui.name/knitr/},
}

@Manual{CRAN:rmarkdown,
  title =        {rmarkdown: Dynamic Documents for R},
  author =       {JJ Allaire and Joe Cheng and Yihui Xie and Jonathan
                  McPherson and Winston Chang and Jeff Allen and
                  Hadley Wickham and Aron Atkins and Rob Hyndman and
                  Ruben Arslan},
  year =         {2017},
  note =         {R package version 1.6},
  url =          {https://CRAN.R-project.org/package=rmarkdown},
}

@Manual{CRAN:rticles,
  title =        {rticles: Article Formats for R Markdown},
  author =       {JJ Allaire and {R Foundation} and Hadley Wickham and
                  {Journal of Statistical Software} and Yihui Xie and
                  Ramnath Vaidyanathan and {Association for Computing
                  Machinery} and Carl Boettiger and {Elsevier} and
                  Karl Broman and Kirill Mueller and Bastiaan Quast
                  and Randall Pruim and Ben Marwick and Charlotte
                  Wickham and Oliver Keyes and Miao Yu},
  year =         {2017},
  note =         {R package version 0.4.1},
  url =          {https://CRAN.R-project.org/package=rticles},
}

@article{PeerJ:Rcpp,
  title =        {Extending \textit{R} with \textit{C++}: A Brief
                  Introduction to \textit{Rcpp}},
  author =       {Eddelbuettel, Dirk and Balamuta, James Joseph},
  year =         2017,
  month =        aug,
  keywords =     {applications and case studies, simulation,
                  computationally intensive methods, statistical
                  computing},
  abstract =     { \textit{R} has always provided an application
                  programming interface (API) for extensions. Based on
                  the \textit{C} language, it uses a number of macros
                  and other low-level constructs to exchange data
                  structures between the \textit{R} process and any
                  dynamically-loaded component modules authors added
                  to it. With the introduction of the \textit{Rcpp}
                  package, and its later refinements, this process has
                  become considerably easier yet also more robust. By
                  now, \textit{Rcpp} has become the most popular
                  extension mechanism for \textit{R}. This article
                  introduces \textit{Rcpp}, and illustrates with
                  several examples how the \textit{Rcpp Attributes}
                  mechanism in particular eases the transition of
                  objects between \textit{R} and \textit{C++} code.  },
  volume =       5,
  pages =        {e3188v1},
  journal =      {PeerJ Preprints},
  issn =         {2167-9843},
  url =          {https://doi.org/10.7287/peerj.preprints.3188v1},
  doi =          {10.7287/peerj.preprints.3188v1}
}
